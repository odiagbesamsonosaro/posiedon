{"version":3,"sources":["components/Navigation.js","io/index.js","io/actions.js","components/iolistener.js","components/withdrawals.js","components/creategame.js","components/game.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","react_default","a","createElement","className","react_router_dom","to","exact","activeClassName","Socket","actions","getgameobject","setgameobject","turngameonoroff","updategameobject","newuserjoined","resetuser","getwithdrawalrequest","requests","IoListener","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","socket","setGameObject","setWithdrawalRequest","on","game","data","Component","Withdrawals","withdrawals","withdraws","map","val","user","username","bank","account_number","amount","style","fontSize","color","CreateGame","_this","handleInputChange","bind","assertThisInitialized","updateGameObject","state","question","options","date","answer","e","setState","objectSpread","defineProperty","target","id","value","preventDefault","reset","_this$state$game","possibleWinners","padding","paddingLeft","onSubmit","placeholder","required","onChange","type","Game","drawGame","Fragment","concat","gameison","option","setGameState","checked","creategame","App","totalSignedUp","console","log","emit","prompt","_this2","components_Navigation","react_router","path","render","routeProps","components_withdrawals","assign","routeprops","components_game","iolistener","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3bf71de.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst Navigation = props => {\n  return (\n    <div className=\"tp-navigation\">\n      <Link to=\"/\" exact className=\"tp-brand\">\n        Poseidon\n      </Link>\n      <ul>\n        <li>\n          <NavLink to=\"/withdrawal_request\" activeClassName=\"tp-nav-active\">\n            withdrawals\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/game\" activeClassName=\"tp-nav-active\">\n            game\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import * as IO from \"socket.io-client\";\n\nconst endPoint = \"https://topner.herokuapp.com\";\nconst Socket = new IO(endPoint);\nexport default Socket;\n","const actions = {\n  getgameobject: \"GET-GAME\",\n  setgameobject: \"SET-GAME\",\n  turngameonoroff: \"TURN-ON-OFF\",\n  updategameobject: \"UPDATE-GAME-OBJECT\",\n  newuserjoined: \"NEW-USER\",\n  resetuser: \"RESETUSER\",\n  getwithdrawalrequest: \"GET-WITHDRAWAL-REQUESTS\",\n  requests: \"RECIEVED-REQUEST\"\n};\n\nexport default actions;\n","import React, { Component } from \"react\";\nimport actions from \"../io/actions\";\n\nconst { setgameobject, newuserjoined, requests } = actions;\nclass IoListener extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    const { socket: Socket, setGameObject, setWithdrawalRequest } = this.props;\n\n    Socket.on(setgameobject, game => {\n      setGameObject(game);\n    });\n\n    Socket.on(newuserjoined, data => {});\n\n    Socket.on(requests, data => {\n      setWithdrawalRequest(data);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default IoListener;\n","import React, { Component } from \"react\";\n\nclass Withdrawals extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    // grab withdrawal request\n  }\n  render() {\n    const { withdrawals } = this.props;\n    const withdraws = withdrawals\n      ? withdrawals.map(val => {\n          return (\n            <div className=\"tp-withdraw-request\">\n              <div>\n                <h2>{val.user.username}</h2>\n                <h5>{val.user.bank}</h5>\n                <h5>{val.user.account_number}</h5>\n                <h5>&#8358; {val.amount}</h5>\n              </div>\n\n              <div>\n                <span style={{ fontSize: 40, color: \"red\" }}>&times;</span>\n              </div>\n            </div>\n          );\n        })\n      : \"no withdrawals for now\";\n    return (\n      <div className=\"tp-withdrawals\">\n        <h4 className=\"tp-heading\">Withdrawals</h4>\n        {withdraws}\n      </div>\n    );\n  }\n}\n\nexport default Withdrawals;\n","import React, { Component } from \"react\";\n\nclass CreateGame extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.updateGameObject = this.updateGameObject.bind(this);\n    this.state = {\n      game: {\n        question: \"\",\n        options: \"\",\n        date: \"\",\n        answer: \"\"\n      }\n    };\n  }\n  handleInputChange(e) {\n    const game = this.state.game;\n\n    this.setState({\n      game: { ...game, [e.target.id]: e.target.value }\n    });\n  }\n\n  updateGameObject(e) {\n    e.preventDefault();\n    const game = this.state.game;\n    const { updateGameObject } = this.props;\n    updateGameObject(game);\n    e.target.reset();\n  }\n\n  render() {\n    const {\n      question,\n      options,\n      possibleWinners,\n      date,\n      answer\n    } = this.state.game;\n    return (\n      <div className=\"tp-create-game\">\n        <h4 style={{ padding: 10, paddingLeft: 0 }}>Create a new game</h4>\n        <form onSubmit={this.updateGameObject}>\n          <div>\n            <textarea\n              className=\"tp-input-field\"\n              placeholder=\"question\"\n              id=\"question\"\n              required\n              value={question}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              className=\"tp-input-field\"\n              placeholder=\"options\"\n              value={options}\n              required\n              id=\"options\"\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Answer\"\n              value={answer}\n              className=\"tp-input-field\"\n              id=\"answer\"\n              required\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <input\n              type=\"date\"\n              id=\"date\"\n              className=\"tp-input-field\"\n              placeholder=\"Choose date\"\n              onChange={this.handleInputChange}\n              value={date}\n            />\n          </div>\n\n          <div>\n            <button className=\"tp-auth-btn\">Create game</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateGame;\n","import React, { Component } from \"react\";\nimport CreateGame from \"./creategame\";\n\nclass Game extends Component {\n  render() {\n    const { game } = this.props;\n    const drawGame = game ? (\n      <React.Fragment>\n        <p className={`${game.gameison ? \"tp-on\" : \"tp-off\"}`}>\n          {game.question.question}\n        </p>\n        <div className=\"tp-options\">\n          {game.question.option.map(val => {\n            return <div className=\"tp-chip\">{val}</div>;\n          })}\n          <label className=\"tp-container\">\n            set game on/off\n            <input\n              type=\"checkbox\"\n              onChange={this.props.setGameState}\n              checked={game.gameison}\n            />\n            <span className=\"tp-checkmark\" />\n          </label>\n        </div>\n      </React.Fragment>\n    ) : (\n      \"Getting game....\"\n    );\n    return (\n      <div className=\"game\">\n        <h4 className=\"tp-heading\">Game</h4>\n\n        <h4>Current game</h4>\n        <div className={`tp-on-game`}>{drawGame}</div>\n        <CreateGame updateGameObject={this.props.updateGameObject} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Socket from \"./io/index\";\nimport Iolistener from \"./components/iolistener\";\nimport Withdrawals from \"./components/withdrawals\";\nimport Game from \"./components/game\";\nimport actions from \"./io/actions\";\n\nconst {\n  getgameobject,\n  turngameonoroff,\n  resetuser,\n  updategameobject,\n\n  getwithdrawalrequest\n} = actions;\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      game: null,\n\n      totalSignedUp: null,\n      withdrawals: []\n    };\n\n    this.setGameObject = this.setGameObject.bind(this);\n    this.setWithdrawalRequest = this.setWithdrawalRequest.bind(this);\n  }\n\n  setGameObject(game) {\n    // hello how are you doing\n    console.log(game);\n    this.setState({\n      game\n    });\n  }\n\n  updateGameObject(data) {\n    Socket.emit(updategameobject, data);\n  }\n\n  setGameState(e) {\n    const { checked } = e.target;\n    const sure = prompt(\"Are you sure you want to continue\");\n    if (sure) {\n      if (checked) {\n        Socket.emit(turngameonoroff, true);\n      } else {\n        Socket.emit(turngameonoroff, false);\n        Socket.emit(resetuser);\n      }\n    } else {\n      return;\n    }\n  }\n\n  setWithdrawalRequest(data) {\n    this.setState({\n      withdrawals: data\n    });\n  }\n\n  componentDidMount() {\n    // grab the game object from the server\n    Socket.emit(getgameobject);\n    Socket.emit(getwithdrawalrequest);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navigation setGameState={this.setGameState} />\n          <div className=\"tp-main-container\">\n            <Switch>\n              <Route\n                path=\"/withdrawal_request\"\n                exact\n                render={routeProps => {\n                  return (\n                    <Withdrawals\n                      {...routeProps}\n                      withdrawals={this.state.withdrawals}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path=\"/game\"\n                exact\n                render={routeprops => {\n                  return (\n                    <Game\n                      {...routeprops}\n                      game={this.state.game}\n                      setGameState={this.setGameState}\n                      updateGameObject={this.updateGameObject}\n                    />\n                  );\n                }}\n              />\n            </Switch>\n          </div>\n          <Iolistener\n            socket={Socket}\n            setWithdrawalRequest={this.setWithdrawalRequest}\n            setGameObject={this.setGameObject}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}